{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victory\\\\Desktop\\\\PI-Pokemon-main\\\\client\\\\src\\\\views\\\\Form\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport style from \"./Form.module.css\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport InputsForm from \"./inputsForm.jsx\";\nimport pikachu from \"./img/Creacion-Poke-Defecto.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [errors, setErrors] = useState({\n    name: \"\",\n    image: \"\"\n  });\n  const [form, setForm] = useState({\n    name: \"\",\n    image: \"\",\n    life: 50,\n    attack: 50,\n    defense: 50,\n    velocity: 50,\n    height: \"\",\n    weight: \"\",\n    Types: []\n  });\n  function valueInputhandler(event) {\n    const property = event.target.name;\n    const value = event.target.value;\n    validate({\n      ...form,\n      [property]: value\n    });\n    setForm({\n      ...form,\n      [property]: value\n    });\n    //validate es la funcion creada abajo para verificar los inputs\n  }\n\n  const validate = form => {\n    //validacion para name\n    if (form.name) {\n      /^[a-zA-Z]+$/.test(form.name) ? setErrors({\n        ...errors,\n        name: \"\"\n      }) : setErrors({\n        ...errors,\n        name: \"No esta correcto\"\n      });\n    } else !form.name && setErrors({\n      ...errors,\n      name: \"Debe introducir un nombre\"\n    });\n\n    // if (form.image && form.name) {\n    //   /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(form.image) ? setErrors({...errors, image: \"\" }):setErrors({...errors, image: \"Colocar un Imagen correcta\" })}\n    // else !form.image && setErrors({...errors, image: \"Debe colocar una imagen\" });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    axios.post(\"http://localhost:3001/pokemons/\", form).then(res => alert(\"Pokemón Creado\")).catch(err => alert(err));\n  };\n  const typesPokemon = useSelector(state => state.typesPokemon);\n\n  /* FUNCION VERIFICADORA DE MI INPUT CHECKBOX */\n  const introduceTypeHandle = event => {\n    const tipos = event.target.id;\n    if (form.Types.includes(`${tipos}`)) {\n      const aEliminar = form.Types.findIndex(element => element === `${tipos}`);\n      form.Types.splice(aEliminar, 1);\n      setForm({\n        ...form,\n        Types: [...form.Types]\n      });\n      return;\n    }\n    setForm({\n      ...form,\n      Types: [...form.Types, tipos]\n    });\n  };\n  //-----------------------------------------------\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.div_generalDelForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Crearemos nuestro Pokem\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputsForm, {\n      form: form,\n      submitHandler: submitHandler,\n      errors: errors,\n      valueInputhandler: valueInputhandler,\n      typesPokemon: typesPokemon,\n      introduceTypeHandle: introduceTypeHandle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n      children: \" (*) Se deben rellenar obligatoriamente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Form, \"EpCDQ+rf+rDobYvyiy3C87/u10I=\", false, function () {\n  return [useSelector];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["style","useState","axios","useSelector","InputsForm","pikachu","jsxDEV","_jsxDEV","Form","_s","errors","setErrors","name","image","form","setForm","life","attack","defense","velocity","height","weight","Types","valueInputhandler","event","property","target","value","validate","test","submitHandler","preventDefault","post","then","res","alert","catch","err","typesPokemon","state","introduceTypeHandle","tipos","id","includes","aEliminar","findIndex","element","splice","className","div_generalDelForm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Victory/Desktop/PI-Pokemon-main/client/src/views/Form/Form.jsx"],"sourcesContent":["import style from \"./Form.module.css\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport InputsForm from \"./inputsForm.jsx\";\r\nimport pikachu from \"./img/Creacion-Poke-Defecto.png\"\r\n\r\n\r\nconst Form = () => {\r\n  const [errors, setErrors] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n  });\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    image: \"\",\r\n    life: 50,\r\n    attack: 50,\r\n    defense: 50,\r\n    velocity: 50,\r\n    height: \"\",\r\n    weight: \"\",\r\n    Types: []\r\n  });\r\n\r\n  function valueInputhandler(event) {\r\n    const property = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    validate({ ...form, [property]: value });\r\n    setForm({ ...form, [property]: value });\r\n    //validate es la funcion creada abajo para verificar los inputs\r\n  }\r\n\r\n  const validate = (form) => {\r\n    //validacion para name\r\n    if (form.name){\r\n      /^[a-zA-Z]+$/.test(form.name) ? setErrors({ ...errors, name: \"\" }) : setErrors({ ...errors, name: \"No esta correcto\" });}\r\n    else\r\n      !form.name && setErrors({ ...errors, name: \"Debe introducir un nombre\" });\r\n\r\n    // if (form.image && form.name) {\r\n    //   /\\.(gif|jpe?g|tiff?|png|webp|bmp)$/i.test(form.image) ? setErrors({...errors, image: \"\" }):setErrors({...errors, image: \"Colocar un Imagen correcta\" })}\r\n    // else !form.image && setErrors({...errors, image: \"Debe colocar una imagen\" });\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:3001/pokemons/\", form)\r\n      .then((res) => alert(\"Pokemón Creado\"))\r\n      .catch((err) => alert(err));\r\n  };\r\n\r\n  const typesPokemon = useSelector((state) => state.typesPokemon);\r\n\r\n  /* FUNCION VERIFICADORA DE MI INPUT CHECKBOX */\r\n  const introduceTypeHandle = (event) => {\r\n    const tipos = event.target.id;\r\n\r\n    if (form.Types.includes(`${tipos}`)) {\r\n      const aEliminar = form.Types.findIndex((element) => element === `${tipos}`);\r\n      form.Types.splice(aEliminar, 1);\r\n      setForm({ ...form, Types: [...form.Types] });\r\n      return;\r\n    }\r\n    setForm({ ...form, Types: [...form.Types, tipos] });\r\n  };\r\n  //-----------------------------------------------\r\n\r\n  return (\r\n    <div className={style.div_generalDelForm}>\r\n      <div>Crearemos nuestro Pokemón</div>\r\n      <InputsForm form={form} submitHandler={submitHandler} errors={errors} valueInputhandler= {valueInputhandler} typesPokemon={typesPokemon} introduceTypeHandle={introduceTypeHandle}/>\r\n      \r\n      <h6> (*) Se deben rellenar obligatoriamente</h6>\r\n    </div>\r\n  );\r\n};\r\nexport default Form;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}