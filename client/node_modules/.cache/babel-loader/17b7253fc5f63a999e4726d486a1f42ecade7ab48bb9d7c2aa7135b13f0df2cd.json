{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nconst useForm = (initialForm, validationsForm) => {\n  _s();\n  const [form, setForm] = useState(initialForm);\n  const [errors, setErrors] = useState({});\n\n  // AGREGAR A FORM LOS DEL EVENTO Y VALUE\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setForm({\n      ...form,\n      [name]: value\n    });\n  };\n\n  //\n  const handleBlur = event => {\n    handleChange(event);\n    setErrors(validationsForm(form));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    axios.post(\"http://localhost:3001/pokemons/\", form).then(res => {\n      alert(res.data.message);\n      setForm(initialForm);\n    }).catch(error => {\n      alert(error.response.data.error);\n    });\n  };\n\n  /* FUNCION VERIFICADORA DE MI INPUT CHECKBOX */\n  const introduceTypeHandle = event => {\n    const tipos = event.target.id;\n    if (form.Types.includes(`${tipos}`)) {\n      const aEliminar = form.Types.findIndex(element => element === `${tipos}`);\n      form.Types.splice(aEliminar, 1);\n      setForm({\n        ...form,\n        Types: [...form.Types]\n      });\n      return;\n    }\n    setForm({\n      ...form,\n      Types: [...form.Types, tipos]\n    });\n  };\n  //-----------------------------------------------\n\n  return {\n    form,\n    errors,\n    setForm,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    introduceTypeHandle\n  };\n};\n_s(useForm, \"t+bV1j05V0052A6g7f1jKFwzTuo=\");\nexport default useForm;","map":{"version":3,"names":["useState","axios","useForm","initialForm","validationsForm","_s","form","setForm","errors","setErrors","handleChange","event","name","value","target","handleBlur","handleSubmit","preventDefault","post","then","res","alert","data","message","catch","error","response","introduceTypeHandle","tipos","id","Types","includes","aEliminar","findIndex","element","splice"],"sources":["C:/Users/Victory/Desktop/PI-Pokemon-main/client/src/views/Form/UseForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useForm = (initialForm, validationsForm) => {\r\n\r\n  const [form, setForm] = useState(initialForm);\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  \r\n// AGREGAR A FORM LOS DEL EVENTO Y VALUE\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setForm({ ...form, [name]: value });\r\n  };\r\n\r\n\r\n\r\n//\r\n  const handleBlur = (event) => {\r\n    handleChange(event)\r\n    setErrors(validationsForm(form))\r\n  };\r\n\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:3001/pokemons/\", form)\r\n      .then((res) => {\r\n        alert(res.data.message);\r\n        setForm(initialForm);\r\n      })\r\n      .catch((error) => {\r\n        alert(error.response.data.error);\r\n      });\r\n  };\r\n\r\n    /* FUNCION VERIFICADORA DE MI INPUT CHECKBOX */\r\n    const introduceTypeHandle = (event) => {\r\n      const tipos = event.target.id;\r\n  \r\n      if (form.Types.includes(`${tipos}`)) {\r\n        const aEliminar = form.Types.findIndex(\r\n          (element) => element === `${tipos}`);\r\n        form.Types.splice(aEliminar, 1);\r\n        setForm({ ...form, Types: [...form.Types] });\r\n        return;\r\n      }\r\n      setForm({ ...form, Types: [...form.Types, tipos] });\r\n    };\r\n    //-----------------------------------------------\r\n\r\n\r\n\r\n  return {\r\n    form,\r\n    errors,\r\n    setForm,\r\n    handleChange,\r\n    handleBlur,\r\n    handleSubmit,\r\n    introduceTypeHandle\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGA,CAACC,WAAW,EAAEC,eAAe,KAAK;EAAAC,EAAA;EAEhD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAACG,WAAW,CAAC;EAE7C,MAAM,CAACK,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAG1C;EACE,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEpCP,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACM,IAAI,GAAGC;IAAM,CAAC,CAAC;EACrC,CAAC;;EAIH;EACE,MAAME,UAAU,GAAIJ,KAAK,IAAK;IAC5BD,YAAY,CAACC,KAAK,CAAC;IACnBF,SAAS,CAACL,eAAe,CAACE,IAAI,CAAC,CAAC;EAClC,CAAC;EAGD,MAAMU,YAAY,GAAIL,KAAK,IAAK;IAC9BA,KAAK,CAACM,cAAc,EAAE;IACtBhB,KAAK,CACFiB,IAAI,CAAC,iCAAiC,EAAEZ,IAAI,CAAC,CAC7Ca,IAAI,CAAEC,GAAG,IAAK;MACbC,KAAK,CAACD,GAAG,CAACE,IAAI,CAACC,OAAO,CAAC;MACvBhB,OAAO,CAACJ,WAAW,CAAC;IACtB,CAAC,CAAC,CACDqB,KAAK,CAAEC,KAAK,IAAK;MAChBJ,KAAK,CAACI,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACG,KAAK,CAAC;IAClC,CAAC,CAAC;EACN,CAAC;;EAEC;EACA,MAAME,mBAAmB,GAAIhB,KAAK,IAAK;IACrC,MAAMiB,KAAK,GAAGjB,KAAK,CAACG,MAAM,CAACe,EAAE;IAE7B,IAAIvB,IAAI,CAACwB,KAAK,CAACC,QAAQ,CAAE,GAAEH,KAAM,EAAC,CAAC,EAAE;MACnC,MAAMI,SAAS,GAAG1B,IAAI,CAACwB,KAAK,CAACG,SAAS,CACnCC,OAAO,IAAKA,OAAO,KAAM,GAAEN,KAAM,EAAC,CAAC;MACtCtB,IAAI,CAACwB,KAAK,CAACK,MAAM,CAACH,SAAS,EAAE,CAAC,CAAC;MAC/BzB,OAAO,CAAC;QAAE,GAAGD,IAAI;QAAEwB,KAAK,EAAE,CAAC,GAAGxB,IAAI,CAACwB,KAAK;MAAE,CAAC,CAAC;MAC5C;IACF;IACAvB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEwB,KAAK,EAAE,CAAC,GAAGxB,IAAI,CAACwB,KAAK,EAAEF,KAAK;IAAE,CAAC,CAAC;EACrD,CAAC;EACD;;EAIF,OAAO;IACLtB,IAAI;IACJE,MAAM;IACND,OAAO;IACPG,YAAY;IACZK,UAAU;IACVC,YAAY;IACZW;EACF,CAAC;AACH,CAAC;AAACtB,EAAA,CA9DIH,OAAO;AAgEb,eAAeA,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}