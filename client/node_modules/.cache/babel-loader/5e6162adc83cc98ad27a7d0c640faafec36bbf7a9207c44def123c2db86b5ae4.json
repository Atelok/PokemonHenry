{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_ID, SET_PAGE, SEE_IMAGE, ORDER_POKEMONS, FILTER_POKEMONS, TYPES_POKEMON, FILTER_ATAQUE } from \"../Actions/TypeActions\";\nconst initialState = {\n  allPokemon: [],\n  filterPokemon: [],\n  currentPage: 0,\n  pokemonsPerPage: 12,\n  seeMewImage: false,\n  typesPokemon: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state.allPokemon);\n  switch (action.type) {\n    //OBTENER POKEMON\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemon: action.payload,\n        filterPokemon: action.payload\n      };\n\n    //OBTENET POKEMON POR ID\n    case GET_POKEMON_ID:\n      return {\n        ...state,\n        allPokemon: action.payload\n      };\n\n    //PAGINADO\n    case SET_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n\n    //IMAGEN MEW\n    case SEE_IMAGE:\n      return {\n        ...state,\n        seeMewImage: action.payload\n      };\n\n    //ORDENAR POKEMON DE A-Z / Z-A / REFRESCAR TODO\n    case ORDER_POKEMONS:\n      if (action.payload === \"refreshAll\") {\n        return {\n          ...state,\n          allPokemon: [...state.filterPokemon.sort((a, b) => a.id - b.id)]\n        };\n      }\n      const order = action.payload === \"Ascendente\" ? [...state.allPokemon.sort((a, b) => a.name.localeCompare(b.name))] : [...state.allPokemon.sort((a, b) => b.name.localeCompare(a.name))];\n      return {\n        ...state,\n        allPokemon: order\n      };\n\n    // PARA PONER LOS TIPOS POKEMONS EN EL GLOBAL\n    case TYPES_POKEMON:\n      return {\n        ...state,\n        typesPokemon: action.payload\n      };\n\n    //FILTRAR POR TIPOS\n    case FILTER_POKEMONS:\n      const sameType = state.filterPokemon.filter(typ => typ.Types[0] === action.payload || typ.Types[1] === action.payload);\n      return {\n        ...state,\n        allPokemon: sameType\n      };\n    case FILTER_ATAQUE:\n      const filtAttack = action.payload === \"mayorAtaque\" ? state.allPokemon.sort((a, b) => b.attack - a.attack) : state.allPokemon.sort((a, b) => a.attack - b.attack);\n      return;\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;\n\n// para filtrado, posible solucion\n// const pokeType =[];\n\n// if (Array.isArray(poke.types)) {\n\n//     if (poke.types[0] === action.payload || poke.types[1] === action.payload) {\n//         pokeType.push(poke)\n//     }\n\n// }else{\n//     if (poke.Types[0].name===action.payload || poke.Types[1].name===action.payload) {\n//         pokeType.push(poke)\n//     }\n// }\n// return pokeType","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_ID","SET_PAGE","SEE_IMAGE","ORDER_POKEMONS","FILTER_POKEMONS","TYPES_POKEMON","FILTER_ATAQUE","initialState","allPokemon","filterPokemon","currentPage","pokemonsPerPage","seeMewImage","typesPokemon","rootReducer","state","arguments","length","undefined","action","console","log","type","payload","sort","a","b","id","order","name","localeCompare","sameType","filter","typ","Types","filtAttack","attack"],"sources":["C:/Users/Victory/Desktop/PI-Pokemon-main/client/src/Redux/Reducers/reducer.js"],"sourcesContent":["import { GET_ALL_POKEMONS, GET_POKEMON_ID, SET_PAGE, SEE_IMAGE, ORDER_POKEMONS, FILTER_POKEMONS, TYPES_POKEMON, FILTER_ATAQUE } from \"../Actions/TypeActions\"\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    allPokemon: [],\r\n    filterPokemon: [],\r\n    currentPage: 0,\r\n    pokemonsPerPage:12,\r\n    seeMewImage: false,\r\n    typesPokemon: []\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\nconsole.log(state.allPokemon);\r\n    switch (action.type) {\r\n        \r\n        //OBTENER POKEMON\r\n        case GET_ALL_POKEMONS:\r\n            return { ...state, allPokemon: action.payload , filterPokemon: action.payload};\r\n\r\n        \r\n        //OBTENET POKEMON POR ID\r\n        case GET_POKEMON_ID:\r\n            return { ...state, allPokemon: action.payload};\r\n\r\n        \r\n        //PAGINADO\r\n        case SET_PAGE:\r\n            return { ...state, currentPage: action.payload};\r\n\r\n        \r\n        //IMAGEN MEW\r\n        case SEE_IMAGE:\r\n            return {...state, seeMewImage: action.payload };\r\n\r\n        \r\n        //ORDENAR POKEMON DE A-Z / Z-A / REFRESCAR TODO\r\n        case ORDER_POKEMONS:\r\n            if (action.payload === \"refreshAll\") {\r\n                return {...state, allPokemon: [...state.filterPokemon.sort((a, b)=> a.id - b.id)]}\r\n            }\r\n            const order = action.payload === \"Ascendente\"? [...state.allPokemon.sort((a, b)=> a.name.localeCompare(b.name))]: [...state.allPokemon.sort((a, b)=> b.name.localeCompare(a.name))]\r\n            return {...state, allPokemon: order};\r\n        \r\n        \r\n        // PARA PONER LOS TIPOS POKEMONS EN EL GLOBAL\r\n        case TYPES_POKEMON:\r\n            return {...state, typesPokemon: action.payload };\r\n        \r\n\r\n        //FILTRAR POR TIPOS\r\n        case FILTER_POKEMONS:\r\n        const sameType = state.filterPokemon.filter((typ)=>typ.Types[0]===action.payload || typ.Types[1]===action.payload)\r\n            return {...state, allPokemon: sameType };\r\n\r\n\r\n        case FILTER_ATAQUE:\r\n        const filtAttack = action.payload === \"mayorAtaque\"? state.allPokemon.sort((a, b)=>b.attack-a.attack) : state.allPokemon.sort((a, b)=>a.attack-b.attack)  \r\n            return\r\n\r\n\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default rootReducer\r\n\r\n\r\n    // para filtrado, posible solucion\r\n   // const pokeType =[];\r\n\r\n            // if (Array.isArray(poke.types)) {\r\n                \r\n            //     if (poke.types[0] === action.payload || poke.types[1] === action.payload) {\r\n            //         pokeType.push(poke)\r\n            //     }\r\n                \r\n            // }else{\r\n            //     if (poke.Types[0].name===action.payload || poke.Types[1].name===action.payload) {\r\n            //         pokeType.push(poke)\r\n            //     }\r\n            // }\r\n            // return pokeType"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}