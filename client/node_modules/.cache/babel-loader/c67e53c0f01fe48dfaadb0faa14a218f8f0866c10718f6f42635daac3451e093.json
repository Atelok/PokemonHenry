{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Victory\\\\Desktop\\\\PI-Pokemon-main\\\\client\\\\src\\\\views\\\\Home\\\\paginado.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyComponent() {\n  _s();\n  //  const items = [\"item 1\", \"item 2\", \"item 3\", \"item 4\", \"item 5\", \"item 6\", \"item 7\", \"item 8\", \"item 9\", \"item 10\"];\n\n  const allPokemon = useSelector(state => state.allPokemon);\n  const [currentPage, setCurrentPage] = useState(0);\n  const itemsPerPage = 12;\n  const handleClick = (event, index) => {\n    event.preventDefault();\n    setCurrentPage(index);\n  };\n  const renderItems = () => {\n    const start = currentPage * itemsPerPage;\n    const end = start + itemsPerPage;\n    return allPokemon.slice(start, end).map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    });\n  };\n  const renderPageNumbers = () => {\n    const pageNumbers = [];\n    for (let i = 0; i < Math.ceil(allPokemon.length / itemsPerPage); i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"li\", {\n        className: i === currentPage ? \"active\" : null,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          onClick: event => handleClick(event, index),\n          children: i + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this));\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: renderItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: renderPageNumbers()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(MyComponent, \"DoJ/8FwRN2n36zK2Wo9dP3+GQrc=\", false, function () {\n  return [useSelector];\n});\n_c = MyComponent;\nexport default MyComponent;\n\n/*\r\nconst ITEMS_PER_PAGE = 8; // número de elementos por página\r\nconst HomePage = () => {\r\n    const [currentPage, setCurrentPage] = useState(1); // estado para la página actual\r\n\r\n    const dogs = useSelector((state) => state.dogs);\r\n    const totalPages = Math.ceil(dogs.length / ITEMS_PER_PAGE); // calcula la cantidad total de páginas basado en la cantidad de datos y el número de elementos por página\r\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    const show_dogs = dogs.slice( \r\n        (currentPage - 1) * ITEMS_PER_PAGE,\r\n        currentPage * ITEMS_PER_PAGE\r\n    );\r\n    // función para cambiar la página\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n    // función para avanzar a la siguiente página\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // función para retroceder a la página anterior\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                <section style={{ minWidth: \"35%\", height: \"500px\" }}>\r\n                    <SearchBar style={{ width: \"100%\" }} />\r\n                    <div>\r\n                        <button onClick={handlePreviousPage}>Previous</button>\r\n                        {[...Array(totalPages)].map((_, index) => (\r\n                    <button key={index} onClick={() => handlePageChange(index + 1)}>\r\n                    {index + 1}\r\n                    </button>\r\n                ))}\r\n                        <button onClick={handleNextPage}>Next</button>\r\n                    </div>\r\n                </section>\r\n\r\n                <section style={{ display: \"flex\", width: \"auto%\" }}>\r\n                    <div className={style.conteiner}>\r\n                        {show_dogs.map((dog, index) => {\r\n                            return <Card dog={dog} key={index} />;\r\n                        })}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n*/\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","jsxDEV","_jsxDEV","MyComponent","_s","allPokemon","state","currentPage","setCurrentPage","itemsPerPage","handleClick","event","index","preventDefault","renderItems","start","end","slice","map","item","children","fileName","_jsxFileName","lineNumber","columnNumber","renderPageNumbers","pageNumbers","i","Math","ceil","length","push","className","href","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Victory/Desktop/PI-Pokemon-main/client/src/views/Home/paginado.jsx"],"sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\n\r\n\r\n\r\n\r\nfunction MyComponent() {\r\n    //  const items = [\"item 1\", \"item 2\", \"item 3\", \"item 4\", \"item 5\", \"item 6\", \"item 7\", \"item 8\", \"item 9\", \"item 10\"];\r\n\r\n    const allPokemon = useSelector((state) => state.allPokemon)\r\n\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const itemsPerPage = 12;\r\n\r\n    const handleClick = (event, index) => {\r\n        event.preventDefault();\r\n        setCurrentPage(index);\r\n    };\r\n\r\n\r\n    const renderItems = () => {\r\n        const start = currentPage * itemsPerPage;\r\n        const end = start + itemsPerPage;\r\n\r\n        return allPokemon.slice(start, end).map((item, index) => {\r\n            return <li key={index}>{item}</li>;\r\n        });\r\n    };\r\n\r\n    const renderPageNumbers = () => {\r\n        const pageNumbers = [];\r\n        for (let i = 0; i < Math.ceil(allPokemon.length / itemsPerPage); i++) {\r\n            pageNumbers.push(\r\n                <li key={i} className={i === currentPage ? \"active\" : null}>\r\n                    <a href=\"#\" onClick={(event) => handleClick(event, index)}>\r\n                        {i + 1}\r\n                    </a>\r\n                </li>\r\n            );\r\n        }\r\n        return pageNumbers;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul>{renderItems()}</ul>\r\n            <ul className=\"pagination\">{renderPageNumbers()}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyComponent;\r\n\r\n\r\n\r\n/*\r\nconst ITEMS_PER_PAGE = 8; // número de elementos por página\r\nconst HomePage = () => {\r\n    const [currentPage, setCurrentPage] = useState(1); // estado para la página actual\r\n\r\n    const dogs = useSelector((state) => state.dogs);\r\n    const totalPages = Math.ceil(dogs.length / ITEMS_PER_PAGE); // calcula la cantidad total de páginas basado en la cantidad de datos y el número de elementos por página\r\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\r\n    const endIndex = startIndex + ITEMS_PER_PAGE;\r\n    const show_dogs = dogs.slice( \r\n        (currentPage - 1) * ITEMS_PER_PAGE,\r\n        currentPage * ITEMS_PER_PAGE\r\n    );\r\n    // función para cambiar la página\r\n    const handlePageChange = (pageNumber) => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n    // función para avanzar a la siguiente página\r\n    const handleNextPage = () => {\r\n        if (currentPage < totalPages) {\r\n            setCurrentPage(currentPage + 1);\r\n        }\r\n    };\r\n\r\n    // función para retroceder a la página anterior\r\n    const handlePreviousPage = () => {\r\n        if (currentPage > 1) {\r\n            setCurrentPage(currentPage - 1);\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <div style={{ display: \"flex\", width: \"100%\" }}>\r\n                <section style={{ minWidth: \"35%\", height: \"500px\" }}>\r\n                    <SearchBar style={{ width: \"100%\" }} />\r\n                    <div>\r\n                        <button onClick={handlePreviousPage}>Previous</button>\r\n                        {[...Array(totalPages)].map((_, index) => (\r\n                    <button key={index} onClick={() => handlePageChange(index + 1)}>\r\n                    {index + 1}\r\n                    </button>\r\n                ))}\r\n                        <button onClick={handleNextPage}>Next</button>\r\n                    </div>\r\n                </section>\r\n\r\n                <section style={{ display: \"flex\", width: \"auto%\" }}>\r\n                    <div className={style.conteiner}>\r\n                        {show_dogs.map((dog, index) => {\r\n                            return <Card dog={dog} key={index} />;\r\n                        })}\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}