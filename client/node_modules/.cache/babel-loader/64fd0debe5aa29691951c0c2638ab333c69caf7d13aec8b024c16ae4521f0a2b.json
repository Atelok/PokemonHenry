{"ast":null,"code":"import { GET_ALL_POKEMONS, GET_POKEMON_ID, SET_PAGE, SEE_IMAGE, ORDER_POKEMONS, FILTER_POKEMONS, TYPES_POKEMON } from \"../Actions/TypeActions\";\nconst initialState = {\n  allPokemon: [],\n  filterPokemon: [],\n  currentPage: 0,\n  pokemonsPerPage: 12,\n  seeMewImage: false,\n  typesPokemon: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state.filterPokemon.filter(typ => typ.Types[0].name));\n  switch (action.type) {\n    //OBTENER POKEMON\n    case GET_ALL_POKEMONS:\n      return {\n        ...state,\n        allPokemon: action.payload,\n        filterPokemon: action.payload\n      };\n    //OBTENET POKEMON POR ID\n    case GET_POKEMON_ID:\n      return {\n        ...state,\n        allPokemon: action.payload\n      };\n\n    //PAGINADO\n    case SET_PAGE:\n      return {\n        ...state,\n        currentPage: action.payload\n      };\n\n    //IMAGEN MEW\n    case SEE_IMAGE:\n      return {\n        ...state,\n        seeMewImage: action.payload\n      };\n\n    //ORDENAR POKEMON DE A-Z / Z-A / REFRESCAR TODO\n    case ORDER_POKEMONS:\n      if (action.payload === \"refreshAll\") {\n        return {\n          ...state,\n          allPokemon: [...state.filterPokemon.sort((a, b) => a.id - b.id)]\n        };\n      }\n      const order = action.payload === \"Ascendente\" ? [...state.allPokemon.sort((a, b) => a.name.localeCompare(b.name))] : [...state.allPokemon.sort((a, b) => b.name.localeCompare(a.name))];\n      return {\n        ...state,\n        allPokemon: order\n      };\n\n    // PARA PONER LOS TIPOS POKEMONS EN EL GLOBAL\n    case TYPES_POKEMON:\n      return {\n        ...state,\n        typesPokemon: action.payload\n      };\n\n    //FILTRAR POR TIPOS\n    case FILTER_POKEMONS:\n      const sameType = state.filterPokemon.filter(typ => typ.types[0] === action.payload || typ.types[1] === action.payload || typ.Types[0].name === action.payload || typ.Types[1].name === action.payload);\n      return {\n        ...state,\n        allPokemon: sameType\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_ALL_POKEMONS","GET_POKEMON_ID","SET_PAGE","SEE_IMAGE","ORDER_POKEMONS","FILTER_POKEMONS","TYPES_POKEMON","initialState","allPokemon","filterPokemon","currentPage","pokemonsPerPage","seeMewImage","typesPokemon","rootReducer","state","arguments","length","undefined","action","console","log","filter","typ","Types","name","type","payload","sort","a","b","id","order","localeCompare","sameType","types"],"sources":["C:/Users/Victory/Desktop/PI-Pokemon-main/client/src/Redux/Reducers/reducer.js"],"sourcesContent":["import { GET_ALL_POKEMONS, GET_POKEMON_ID, SET_PAGE, SEE_IMAGE, ORDER_POKEMONS, FILTER_POKEMONS, TYPES_POKEMON } from \"../Actions/TypeActions\"\r\n\r\n\r\n\r\n\r\nconst initialState = {\r\n    allPokemon: [],\r\n    filterPokemon: [],\r\n    currentPage: 0,\r\n    pokemonsPerPage:12,\r\n    seeMewImage: false,\r\n    typesPokemon: []\r\n}\r\n\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\nconsole.log(state.filterPokemon.filter((typ)=>typ.Types[0].name));\r\n    switch (action.type) {\r\n        //OBTENER POKEMON\r\n        case GET_ALL_POKEMONS:\r\n            return { ...state, allPokemon: action.payload , filterPokemon: action.payload};\r\n        //OBTENET POKEMON POR ID\r\n        case GET_POKEMON_ID:\r\n            return { ...state, allPokemon: action.payload};\r\n\r\n        //PAGINADO\r\n        case SET_PAGE:\r\n            return { ...state, currentPage: action.payload};\r\n\r\n        //IMAGEN MEW\r\n        case SEE_IMAGE:\r\n            return {...state, seeMewImage: action.payload };\r\n\r\n        //ORDENAR POKEMON DE A-Z / Z-A / REFRESCAR TODO\r\n        case ORDER_POKEMONS:\r\n            if (action.payload === \"refreshAll\") {\r\n                return {...state, allPokemon: [...state.filterPokemon.sort((a, b)=> a.id - b.id)]}\r\n            }\r\n            const order = action.payload === \"Ascendente\"? [...state.allPokemon.sort((a, b)=> a.name.localeCompare(b.name))]: [...state.allPokemon.sort((a, b)=> b.name.localeCompare(a.name))]\r\n            return {...state, allPokemon: order};\r\n        \r\n        // PARA PONER LOS TIPOS POKEMONS EN EL GLOBAL\r\n        case TYPES_POKEMON:\r\n            return {...state, typesPokemon: action.payload };\r\n        \r\n        //FILTRAR POR TIPOS\r\n        case FILTER_POKEMONS:\r\n        const sameType = state.filterPokemon.filter((typ)=>typ.types[0]===action.payload || typ.types[1]===action.payload || typ.Types[0].name===action.payload || typ.Types[1].name===action.payload)\r\n        return {...state, allPokemon: sameType }\r\n\r\n\r\n        default:\r\n            return { ...state }\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}